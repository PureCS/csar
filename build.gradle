group 'org.qmul'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'antlr'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'org.qmul.Csar'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    // https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7'
    // https://mvnrepository.com/artifact/org.antlr/antlr4
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7'
    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

run {
    // Set java program arguments from gradle run arguments
    if (project.hasProperty('jargs'))
        args(jargs.split(' '))
}

task(fatJar, type: Jar) {
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// ANTLR generator process settings - https://docs.gradle.org/4.0.1/userguide/antlr_plugin.html#sec:controlling_the_antlr_generator_process
generateGrammarSource {
    maxHeapSize = '64m'
    arguments += ['-visitor', '-long-messages']
}
