apply plugin: 'application'

mainClassName = 'org.qmul.csar.Main'

dependencies {
    compile project(':csar-api')
    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
}

run {
    // TODO run build before this
    // Set java program arguments from gradle run arguments
    if (project.hasProperty('jargs'))
        args(jargs.split(' '))
}

task uberjar(type: Jar, dependsOn: ['compileJava']) {
    zip64 true
    from configurations.runtime.asFileTree.files.collect {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        zipTree(it)
    }
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.resources)
    manifest {
        attributes 'Main-Class': mainClassName
    }

    baseName = "${project.name}-uber"
    classifier = "uberjar"
}

clean.doLast {
    // Delete plugins directory
    new File(pluginsDir).deleteDir()
}
